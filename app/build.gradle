/*
 * Copyright (c) 2020 LOUBIERE Antonin <https://www.github.com/AntoninLoubiere/>
 *
 * This file is part of Diakôluô project <https://www.github.com/AntoninLoubiere/Diakoluo/>.
 *
 *     Diakôluô is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Diakôluô is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     A copy of the license is available in the root folder of Diakôluô, under the
 *     name of LICENSE.md. You could find it also at <https://www.gnu.org/licenses/gpl-3.0.html>.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'


android {
    signingConfigs {
        release {
            Properties localProps = new Properties()
            if (file('../local.properties').exists()) {
                localProps.load(new FileInputStream(file('../local.properties')))
                storeFile file(localProps['signingConfigs.release.storeFile'])
                storePassword localProps['signingConfigs.release.storePassword']
                keyAlias localProps['signingConfigs.release.keyAlias']
                keyPassword localProps['signingConfigs.release.keyPassword']
            }
        }
    }
    compileSdkVersion 30
    defaultConfig {
        applicationId "fr.pyjacpp.diakoluo"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 4
        versionName 'v-dev-0.3.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
            FirebasePerformance {
                instrumentationEnabled false
            }
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        useLibrary 'android.test.base'
        useLibrary 'android.test.mock'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.material:material:1.2.1'
//    implementation 'com.google.firebase:firebase-perf:19.0.5'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'

}
